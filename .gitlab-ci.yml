stages:
  - xs_gen
  - run_syn
  - bit_gen

variables:
    GIT_DEPTH: "1"
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: normal
    GIT_SUBMODULE_PATHS: ":(exclude)nm37-xiangshan/hardware/xs-gen"

default:
  image: gitlab.agileserve.org.cn:15050/zelin/vivado-ci-tools/ucas-cod-2022:v0.9
  tags:
    - node42-vivado
  before_script:
    - mkdir -p work_farm/target/
    - ln -s ../../nm37-xiangshan work_farm/target/nm37-xiangshan
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - unknown_failure
  timeout: 12 hours

shell_run_syn:
  stage: run_syn
  needs: []
  script:
    - cd work_farm
    - make FPGA_PRJ=shell FPGA_BD=vcu128 FPGA_ACT=prj_gen FPGA_VAL=xiangshan vivado_prj
    - make FPGA_PRJ=shell FPGA_BD=vcu128 FPGA_ACT=run_syn FPGA_VAL=xiangshan vivado_prj
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - work_farm/fpga/vivado_out/**/synth.dcp

.xs_run_syn:
  stage: run_syn
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.agileserve.org.cn:8001/serve_hw_sw_dev/xiangshan-precompiled-src.git nm37-xiangshan/hardware/sources/generated
    - cd work_farm
    - make FPGA_PRJ="target:nm37-xiangshan" FPGA_BD=vcu128 FPGA_ACT=prj_gen FPGA_VAL=proto vivado_prj
    - make FPGA_PRJ="target:nm37-xiangshan" FPGA_BD=vcu128 FPGA_ACT=run_syn FPGA_VAL=proto vivado_prj
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - work_farm/fpga/vivado_out/**/synth.dcp

minimal_run_syn:
  extends: .xs_run_syn
  needs: []

# nanhu_run_syn:
#   extends: .xs_run_syn
#   needs: []

.xs_bit_gen:
  stage: bit_gen
  script:
    - cd work_farm
    - make FPGA_PRJ=shell FPGA_BD=vcu128 FPGA_ACT=bit_gen FPGA_VAL=xiangshan vivado_prj
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - work_farm/fpga/vivado_out/**/route.dcp
      - work_farm/hw_plat/

minimal_bit_gen:
  extends: .xs_bit_gen
  needs: [minimal_run_syn, shell_run_syn]

# nanhu_bit_gen:
#   extends: .xs_bit_gen
#   needs: [nanhu_run_syn, shell_run_syn]
